

/* This file is generated by glib-mkenums, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses. */

#ifndef __GTK_TYPE_BUILTINS_H__
#define __GTK_TYPE_BUILTINS_H__

#include <glib-object.h>

G_BEGIN_DECLS

/* enumerations from "gtkaccelgroup.h" */
GType SF(gtk_accel_flags_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_ACCEL_FLAGS (SF(gtk_accel_flags_get_type) ())

/* enumerations from "gtkassistant.h" */
GType SF(gtk_assistant_page_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_ASSISTANT_PAGE_TYPE (SF(gtk_assistant_page_type_get_type) ())

/* enumerations from "gtkbuilder.h" */
GType SF(gtk_builder_error_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_BUILDER_ERROR (SF(gtk_builder_error_get_type) ())

/* enumerations from "gtkcalendar.h" */
GType SF(gtk_calendar_display_options_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_CALENDAR_DISPLAY_OPTIONS (SF(gtk_calendar_display_options_get_type) ())

/* enumerations from "gtkcellrenderer.h" */
GType SF(gtk_cell_renderer_state_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_CELL_RENDERER_STATE (SF(gtk_cell_renderer_state_get_type) ())
GType SF(gtk_cell_renderer_mode_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_CELL_RENDERER_MODE (SF(gtk_cell_renderer_mode_get_type) ())

/* enumerations from "gtkcellrendereraccel.h" */
GType SF(gtk_cell_renderer_accel_mode_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_CELL_RENDERER_ACCEL_MODE (SF(gtk_cell_renderer_accel_mode_get_type) ())

/* enumerations from "gtkclist.h" */
GType SF(gtk_cell_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_CELL_TYPE (SF(gtk_cell_type_get_type) ())
GType SF(gtk_clist_drag_pos_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_CLIST_DRAG_POS (SF(gtk_clist_drag_pos_get_type) ())
GType SF(gtk_button_action_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_BUTTON_ACTION (SF(gtk_button_action_get_type) ())

/* enumerations from "gtkctree.h" */
GType SF(gtk_ctree_pos_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_CTREE_POS (SF(gtk_ctree_pos_get_type) ())
GType SF(gtk_ctree_line_style_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_CTREE_LINE_STYLE (SF(gtk_ctree_line_style_get_type) ())
GType SF(gtk_ctree_expander_style_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_CTREE_EXPANDER_STYLE (SF(gtk_ctree_expander_style_get_type) ())
GType SF(gtk_ctree_expansion_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_CTREE_EXPANSION_TYPE (SF(gtk_ctree_expansion_type_get_type) ())

/* enumerations from "gtkdebug.h" */
GType SF(gtk_debug_flag_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_DEBUG_FLAG (SF(gtk_debug_flag_get_type) ())

/* enumerations from "gtkdialog.h" */
GType SF(gtk_dialog_flags_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_DIALOG_FLAGS (SF(gtk_dialog_flags_get_type) ())
GType SF(gtk_response_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_RESPONSE_TYPE (SF(gtk_response_type_get_type) ())

/* enumerations from "gtkdnd.h" */
GType SF(gtk_dest_defaults_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_DEST_DEFAULTS (SF(gtk_dest_defaults_get_type) ())
GType SF(gtk_target_flags_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_TARGET_FLAGS (SF(gtk_target_flags_get_type) ())

/* enumerations from "gtkentry.h" */
GType SF(gtk_entry_icon_position_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_ENTRY_ICON_POSITION (SF(gtk_entry_icon_position_get_type) ())

/* enumerations from "gtkenums.h" */
GType SF(gtk_anchor_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_ANCHOR_TYPE (SF(gtk_anchor_type_get_type) ())
GType SF(gtk_arrow_placement_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_ARROW_PLACEMENT (SF(gtk_arrow_placement_get_type) ())
GType SF(gtk_arrow_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_ARROW_TYPE (SF(gtk_arrow_type_get_type) ())
GType SF(gtk_attach_options_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_ATTACH_OPTIONS (SF(gtk_attach_options_get_type) ())
GType SF(gtk_button_box_style_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_BUTTON_BOX_STYLE (SF(gtk_button_box_style_get_type) ())
GType SF(gtk_curve_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_CURVE_TYPE (SF(gtk_curve_type_get_type) ())
GType SF(gtk_delete_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_DELETE_TYPE (SF(gtk_delete_type_get_type) ())
GType SF(gtk_direction_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_DIRECTION_TYPE (SF(gtk_direction_type_get_type) ())
GType SF(gtk_expander_style_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_EXPANDER_STYLE (SF(gtk_expander_style_get_type) ())
GType SF(gtk_icon_size_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_ICON_SIZE (SF(gtk_icon_size_get_type) ())
GType SF(gtk_sensitivity_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_SENSITIVITY_TYPE (SF(gtk_sensitivity_type_get_type) ())
GType SF(gtk_side_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_SIDE_TYPE (SF(gtk_side_type_get_type) ())
GType SF(gtk_text_direction_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_TEXT_DIRECTION (SF(gtk_text_direction_get_type) ())
GType SF(gtk_justification_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_JUSTIFICATION (SF(gtk_justification_get_type) ())
GType SF(gtk_match_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_MATCH_TYPE (SF(gtk_match_type_get_type) ())
GType SF(gtk_menu_direction_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_MENU_DIRECTION_TYPE (SF(gtk_menu_direction_type_get_type) ())
GType SF(gtk_message_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_MESSAGE_TYPE (SF(gtk_message_type_get_type) ())
GType SF(gtk_metric_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_METRIC_TYPE (SF(gtk_metric_type_get_type) ())
GType SF(gtk_movement_step_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_MOVEMENT_STEP (SF(gtk_movement_step_get_type) ())
GType SF(gtk_scroll_step_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_SCROLL_STEP (SF(gtk_scroll_step_get_type) ())
GType SF(gtk_orientation_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_ORIENTATION (SF(gtk_orientation_get_type) ())
GType SF(gtk_corner_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_CORNER_TYPE (SF(gtk_corner_type_get_type) ())
GType SF(gtk_pack_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_PACK_TYPE (SF(gtk_pack_type_get_type) ())
GType SF(gtk_path_priority_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_PATH_PRIORITY_TYPE (SF(gtk_path_priority_type_get_type) ())
GType SF(gtk_path_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_PATH_TYPE (SF(gtk_path_type_get_type) ())
GType SF(gtk_policy_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_POLICY_TYPE (SF(gtk_policy_type_get_type) ())
GType SF(gtk_position_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_POSITION_TYPE (SF(gtk_position_type_get_type) ())
GType SF(gtk_preview_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_PREVIEW_TYPE (SF(gtk_preview_type_get_type) ())
GType SF(gtk_relief_style_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_RELIEF_STYLE (SF(gtk_relief_style_get_type) ())
GType SF(gtk_resize_mode_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_RESIZE_MODE (SF(gtk_resize_mode_get_type) ())
GType SF(gtk_signal_run_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_SIGNAL_RUN_TYPE (SF(gtk_signal_run_type_get_type) ())
GType SF(gtk_scroll_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_SCROLL_TYPE (SF(gtk_scroll_type_get_type) ())
GType SF(gtk_selection_mode_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_SELECTION_MODE (SF(gtk_selection_mode_get_type) ())
GType SF(gtk_shadow_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_SHADOW_TYPE (SF(gtk_shadow_type_get_type) ())
GType SF(gtk_state_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_STATE_TYPE (SF(gtk_state_type_get_type) ())
GType SF(gtk_submenu_direction_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_SUBMENU_DIRECTION (SF(gtk_submenu_direction_get_type) ())
GType SF(gtk_submenu_placement_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_SUBMENU_PLACEMENT (SF(gtk_submenu_placement_get_type) ())
GType SF(gtk_toolbar_style_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_TOOLBAR_STYLE (SF(gtk_toolbar_style_get_type) ())
GType SF(gtk_update_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_UPDATE_TYPE (SF(gtk_update_type_get_type) ())
GType SF(gtk_visibility_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_VISIBILITY (SF(gtk_visibility_get_type) ())
GType SF(gtk_window_position_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_WINDOW_POSITION (SF(gtk_window_position_get_type) ())
GType SF(gtk_window_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_WINDOW_TYPE (SF(gtk_window_type_get_type) ())
GType SF(gtk_wrap_mode_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_WRAP_MODE (SF(gtk_wrap_mode_get_type) ())
GType SF(gtk_sort_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_SORT_TYPE (SF(gtk_sort_type_get_type) ())
GType SF(gtk_im_preedit_style_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_IM_PREEDIT_STYLE (SF(gtk_im_preedit_style_get_type) ())
GType SF(gtk_im_status_style_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_IM_STATUS_STYLE (SF(gtk_im_status_style_get_type) ())
GType SF(gtk_pack_direction_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_PACK_DIRECTION (SF(gtk_pack_direction_get_type) ())
GType SF(gtk_print_pages_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_PRINT_PAGES (SF(gtk_print_pages_get_type) ())
GType SF(gtk_page_set_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_PAGE_SET (SF(gtk_page_set_get_type) ())
GType SF(gtk_number_up_layout_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_NUMBER_UP_LAYOUT (SF(gtk_number_up_layout_get_type) ())
GType SF(gtk_page_orientation_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_PAGE_ORIENTATION (SF(gtk_page_orientation_get_type) ())
GType SF(gtk_print_quality_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_PRINT_QUALITY (SF(gtk_print_quality_get_type) ())
GType SF(gtk_print_duplex_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_PRINT_DUPLEX (SF(gtk_print_duplex_get_type) ())
GType SF(gtk_unit_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_UNIT (SF(gtk_unit_get_type) ())
GType SF(gtk_tree_view_grid_lines_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_TREE_VIEW_GRID_LINES (SF(gtk_tree_view_grid_lines_get_type) ())
GType SF(gtk_drag_result_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_DRAG_RESULT (SF(gtk_drag_result_get_type) ())

/* enumerations from "gtkfilechooser.h" */
GType SF(gtk_file_chooser_action_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_FILE_CHOOSER_ACTION (SF(gtk_file_chooser_action_get_type) ())
GType SF(gtk_file_chooser_confirmation_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_FILE_CHOOSER_CONFIRMATION (SF(gtk_file_chooser_confirmation_get_type) ())
GType SF(gtk_file_chooser_error_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_FILE_CHOOSER_ERROR (SF(gtk_file_chooser_error_get_type) ())

/* enumerations from "gtkfilefilter.h" */
GType SF(gtk_file_filter_flags_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_FILE_FILTER_FLAGS (SF(gtk_file_filter_flags_get_type) ())

/* enumerations from "gtkicontheme.h" */
GType SF(gtk_icon_lookup_flags_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_ICON_LOOKUP_FLAGS (SF(gtk_icon_lookup_flags_get_type) ())
GType SF(gtk_icon_theme_error_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_ICON_THEME_ERROR (SF(gtk_icon_theme_error_get_type) ())

/* enumerations from "gtkiconview.h" */
GType SF(gtk_icon_view_drop_position_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_ICON_VIEW_DROP_POSITION (SF(gtk_icon_view_drop_position_get_type) ())

/* enumerations from "gtkimage.h" */
GType SF(gtk_image_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_IMAGE_TYPE (SF(gtk_image_type_get_type) ())

/* enumerations from "gtkmessagedialog.h" */
GType SF(gtk_buttons_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_BUTTONS_TYPE (SF(gtk_buttons_type_get_type) ())

/* enumerations from "gtknotebook.h" */
GType SF(gtk_notebook_tab_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_NOTEBOOK_TAB (SF(gtk_notebook_tab_get_type) ())

/* enumerations from "gtkprintoperation.h" */
GType SF(gtk_print_status_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_PRINT_STATUS (SF(gtk_print_status_get_type) ())
GType SF(gtk_print_operation_result_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_PRINT_OPERATION_RESULT (SF(gtk_print_operation_result_get_type) ())
GType SF(gtk_print_operation_action_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_PRINT_OPERATION_ACTION (SF(gtk_print_operation_action_get_type) ())
GType SF(gtk_print_error_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_PRINT_ERROR (SF(gtk_print_error_get_type) ())

/* enumerations from "gtkprivate.h" */
GType SF(gtk_private_flags_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_PRIVATE_FLAGS (SF(gtk_private_flags_get_type) ())

/* enumerations from "gtkprogressbar.h" */
GType SF(gtk_progress_bar_style_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_PROGRESS_BAR_STYLE (SF(gtk_progress_bar_style_get_type) ())
GType SF(gtk_progress_bar_orientation_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_PROGRESS_BAR_ORIENTATION (SF(gtk_progress_bar_orientation_get_type) ())

/* enumerations from "gtkrc.h" */
GType SF(gtk_rc_flags_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_RC_FLAGS (SF(gtk_rc_flags_get_type) ())
GType SF(gtk_rc_token_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_RC_TOKEN_TYPE (SF(gtk_rc_token_type_get_type) ())

/* enumerations from "gtkrecentchooser.h" */
GType SF(gtk_recent_sort_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_RECENT_SORT_TYPE (SF(gtk_recent_sort_type_get_type) ())
GType SF(gtk_recent_chooser_error_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_RECENT_CHOOSER_ERROR (SF(gtk_recent_chooser_error_get_type) ())

/* enumerations from "gtkrecentfilter.h" */
GType SF(gtk_recent_filter_flags_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_RECENT_FILTER_FLAGS (SF(gtk_recent_filter_flags_get_type) ())

/* enumerations from "gtkrecentmanager.h" */
GType SF(gtk_recent_manager_error_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_RECENT_MANAGER_ERROR (SF(gtk_recent_manager_error_get_type) ())

/* enumerations from "gtksizegroup.h" */
GType SF(gtk_size_group_mode_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_SIZE_GROUP_MODE (SF(gtk_size_group_mode_get_type) ())

/* enumerations from "gtkspinbutton.h" */
GType SF(gtk_spin_button_update_policy_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_SPIN_BUTTON_UPDATE_POLICY (SF(gtk_spin_button_update_policy_get_type) ())
GType SF(gtk_spin_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_SPIN_TYPE (SF(gtk_spin_type_get_type) ())

/* enumerations from "gtktextbuffer.h" */
GType SF(gtk_text_buffer_target_info_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_TEXT_BUFFER_TARGET_INFO (SF(gtk_text_buffer_target_info_get_type) ())

/* enumerations from "gtktextiter.h" */
GType SF(gtk_text_search_flags_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_TEXT_SEARCH_FLAGS (SF(gtk_text_search_flags_get_type) ())

/* enumerations from "gtktextview.h" */
GType SF(gtk_text_window_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_TEXT_WINDOW_TYPE (SF(gtk_text_window_type_get_type) ())

/* enumerations from "gtktoolbar.h" */
GType SF(gtk_toolbar_child_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_TOOLBAR_CHILD_TYPE (SF(gtk_toolbar_child_type_get_type) ())
GType SF(gtk_toolbar_space_style_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_TOOLBAR_SPACE_STYLE (SF(gtk_toolbar_space_style_get_type) ())

/* enumerations from "gtktoolpalette.h" */
GType SF(gtk_tool_palette_drag_targets_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_TOOL_PALETTE_DRAG_TARGETS (SF(gtk_tool_palette_drag_targets_get_type) ())

/* enumerations from "gtktree.h" */
GType SF(gtk_tree_view_mode_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_TREE_VIEW_MODE (SF(gtk_tree_view_mode_get_type) ())

/* enumerations from "gtktreemodel.h" */
GType SF(gtk_tree_model_flags_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_TREE_MODEL_FLAGS (SF(gtk_tree_model_flags_get_type) ())

/* enumerations from "gtktreeview.h" */
GType SF(gtk_tree_view_drop_position_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_TREE_VIEW_DROP_POSITION (SF(gtk_tree_view_drop_position_get_type) ())

/* enumerations from "gtktreeviewcolumn.h" */
GType SF(gtk_tree_view_column_sizing_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_TREE_VIEW_COLUMN_SIZING (SF(gtk_tree_view_column_sizing_get_type) ())

/* enumerations from "gtkuimanager.h" */
GType SF(gtk_ui_manager_item_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_UI_MANAGER_ITEM_TYPE (SF(gtk_ui_manager_item_type_get_type) ())

/* enumerations from "gtkwidget.h" */
GType SF(gtk_widget_flags_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_WIDGET_FLAGS (SF(gtk_widget_flags_get_type) ())
GType SF(gtk_widget_help_type_get_type) (void) G_GNUC_CONST;
#define GTK_TYPE_WIDGET_HELP_TYPE (SF(gtk_widget_help_type_get_type) ())
G_END_DECLS

#endif /* __GTK_TYPE_BUILTINS_H__ */

/* Generated data ends here */
