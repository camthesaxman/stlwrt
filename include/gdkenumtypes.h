/* This file is generated by glib-mkenums, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses. */


#ifndef __GDK_ENUM_TYPES_H__
#define __GDK_ENUM_TYPES_H__

#include <glib-object.h>

G_BEGIN_DECLS

/* enumerations from "gdkcursor.h" */
GType SF(gdk_cursor_type_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_CURSOR_TYPE (SF(gdk_cursor_type_get_type) ())

/* enumerations from "gdkdnd.h" */
GType SF(gdk_drag_action_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_DRAG_ACTION (SF(gdk_drag_action_get_type) ())
GType SF(gdk_drag_protocol_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_DRAG_PROTOCOL (SF(gdk_drag_protocol_get_type) ())

/* enumerations from "gdkevents.h" */
GType SF(gdk_filter_return_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_FILTER_RETURN (SF(gdk_filter_return_get_type) ())
GType SF(gdk_event_type_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_EVENT_TYPE (SF(gdk_event_type_get_type) ())
GType SF(gdk_event_mask_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_EVENT_MASK (SF(gdk_event_mask_get_type) ())
GType SF(gdk_visibility_state_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_VISIBILITY_STATE (SF(gdk_visibility_state_get_type) ())
GType SF(gdk_scroll_direction_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_SCROLL_DIRECTION (SF(gdk_scroll_direction_get_type) ())
GType SF(gdk_notify_type_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_NOTIFY_TYPE (SF(gdk_notify_type_get_type) ())
GType SF(gdk_crossing_mode_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_CROSSING_MODE (SF(gdk_crossing_mode_get_type) ())
GType SF(gdk_property_state_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_PROPERTY_STATE (SF(gdk_property_state_get_type) ())
GType SF(gdk_window_state_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_WINDOW_STATE (SF(gdk_window_state_get_type) ())
GType SF(gdk_setting_action_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_SETTING_ACTION (SF(gdk_setting_action_get_type) ())
GType SF(gdk_owner_change_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_OWNER_CHANGE (SF(gdk_owner_change_get_type) ())

/* enumerations from "gdkfont.h" */
GType SF(gdk_font_type_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_FONT_TYPE (SF(gdk_font_type_get_type) ())

/* enumerations from "gdkgc.h" */
GType SF(gdk_cap_style_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_CAP_STYLE (SF(gdk_cap_style_get_type) ())
GType SF(gdk_fill_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_FILL (SF(gdk_fill_get_type) ())
GType SF(gdk_function_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_FUNCTION (SF(gdk_function_get_type) ())
GType SF(gdk_join_style_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_JOIN_STYLE (SF(gdk_join_style_get_type) ())
GType SF(gdk_line_style_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_LINE_STYLE (SF(gdk_line_style_get_type) ())
GType SF(gdk_subwindow_mode_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_SUBWINDOW_MODE (SF(gdk_subwindow_mode_get_type) ())
GType SF(gdk_gc_values_mask_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_GC_VALUES_MASK (SF(gdk_gc_values_mask_get_type) ())

/* enumerations from "gdkimage.h" */
GType SF(gdk_image_type_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_IMAGE_TYPE (SF(gdk_image_type_get_type) ())

/* enumerations from "gdkinput.h" */
GType SF(gdk_extension_mode_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_EXTENSION_MODE (SF(gdk_extension_mode_get_type) ())
GType SF(gdk_input_source_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_INPUT_SOURCE (SF(gdk_input_source_get_type) ())
GType SF(gdk_input_mode_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_INPUT_MODE (SF(gdk_input_mode_get_type) ())
GType SF(gdk_axis_use_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_AXIS_USE (SF(gdk_axis_use_get_type) ())

/* enumerations from "gdkproperty.h" */
GType SF(gdk_prop_mode_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_PROP_MODE (SF(gdk_prop_mode_get_type) ())

/* enumerations from "gdkregion.h" */
GType SF(gdk_fill_rule_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_FILL_RULE (SF(gdk_fill_rule_get_type) ())
GType SF(gdk_overlap_type_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_OVERLAP_TYPE (SF(gdk_overlap_type_get_type) ())

/* enumerations from "gdkrgb.h" */
GType SF(gdk_rgb_dither_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_RGB_DITHER (SF(gdk_rgb_dither_get_type) ())

/* enumerations from "gdktypes.h" */
GType SF(gdk_byte_order_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_BYTE_ORDER (SF(gdk_byte_order_get_type) ())
GType SF(gdk_modifier_type_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_MODIFIER_TYPE (SF(gdk_modifier_type_get_type) ())
GType SF(gdk_input_condition_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_INPUT_CONDITION (SF(gdk_input_condition_get_type) ())
GType SF(gdk_status_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_STATUS (SF(gdk_status_get_type) ())
GType SF(gdk_grab_status_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_GRAB_STATUS (SF(gdk_grab_status_get_type) ())

/* enumerations from "gdkvisual.h" */
GType SF(gdk_visual_type_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_VISUAL_TYPE (SF(gdk_visual_type_get_type) ())

/* enumerations from "gdkwindow.h" */
GType SF(gdk_window_class_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_WINDOW_CLASS (SF(gdk_window_class_get_type) ())
GType SF(gdk_window_type_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_WINDOW_TYPE (SF(gdk_window_type_get_type) ())
GType SF(gdk_window_attributes_type_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_WINDOW_ATTRIBUTES_TYPE (SF(gdk_window_attributes_type_get_type) ())
GType SF(gdk_window_hints_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_WINDOW_HINTS (SF(gdk_window_hints_get_type) ())
GType SF(gdk_window_type_hint_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_WINDOW_TYPE_HINT (SF(gdk_window_type_hint_get_type) ())
GType SF(gdk_wm_decoration_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_WM_DECORATION (SF(gdk_wm_decoration_get_type) ())
GType SF(gdk_wm_function_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_WM_FUNCTION (SF(gdk_wm_function_get_type) ())
GType SF(gdk_gravity_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_GRAVITY (SF(gdk_gravity_get_type) ())
GType SF(gdk_window_edge_get_type) (void) G_GNUC_CONST;
#define GDK_TYPE_WINDOW_EDGE (SF(gdk_window_edge_get_type) ())
G_END_DECLS

#endif /* __GDK_ENUM_TYPES_H__ */

/* Generated data ends here */
